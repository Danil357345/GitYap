/template/python3/chat.html.py

Main script for generating chat HTML pages
Handles command line arguments for customizing chat display
Uses chat.html_generator to generate HTML output
Dependencies: argparse, chat.html_generator, chat.file_reader

/template/python3/commit_files.py

Git repository management and file commit functionality
Functions: calculate_file_hash, extract_metadata, store_metadata, commit_text_files
Handles file metadata extraction and storage
Git operations: init_git_repo, pull_changes, push_changes
Dependencies: os, git, json, hashlib

/template/python3/compile_prompt.py

Compiles documentation and prompts from source files
Functions: get_file_stats, format_size, read_file, format_file_content
Handles file statistics and content formatting
Dependencies: os, sys, re

/template/python3/config.py

Configuration constants for the application
Defines SCRIPT_TYPES, INTERPRETERS, MIME_TYPES
Maps file extensions to interpreters and MIME types

/template/python3/file_operations.py

File system operations and channel setup
Functions: setup_static_files, find_scripts, initialize_channel
Handles static file copying and channel initialization
Dependencies: os, shutil, pathlib

/template/python3/file_utils.py

Utility functions for file operations
Class FileUtils: read_file_safe, write_file_safe
Handles file encoding detection and safe file operations
Dependencies: os, chardet

/template/python3/http_handler.py

Custom HTTP request handler implementation
Class CustomHTTPRequestHandler: handles GET/POST requests
Implements chat functionality, file serving, WebSocket support
Dependencies: http.server, urllib, json

/template/python3/log.html.py

Generates HTML report of message files
Functions: read_file, extract_metadata, generate_html
Handles Git repository message analysis
Dependencies: os, git, gnupg, chardet

/template/python3/make_outliner_prompt.py

Creates documentation outlines
Functions: group_files_by_type, get_file_stats
Similar to compile_prompt.py but for outlines
Dependencies: os, sys, re

/template/python3/server.py

WebSocket and HTTP server implementation
Class ChatServer: handles WebSocket connections
Function run_server: starts HTTP server
Dependencies: socketserver, websockets, asyncio

/template/python3/start_server.py

Entry point for starting the server
Handles port selection and server initialization
Dependencies: argparse, server.py, utils.py

/template/python3/utils.py

Utility functions and caching
Class Cache: implements caching functionality
Functions: is_port_in_use, find_available_port, generate_title
Dependencies: socket, random, datetime

/template/python3/chat/channel_manager.py

Channel management functionality
Functions: get_available_channels, get_channel_files
Handles channel directory structure
Dependencies: os

/template/python3/chat/file_reader.py

File reading and parsing functionality
Functions: read_file, extract_metadata, truncate_message
Handles file encoding and content extraction
Dependencies: chardet, re

/template/python3/chat/html_generator.py

HTML generation for chat interface
Function generate_chat_html: main HTML generation
Handles message formatting and template processing
Dependencies: multiprocessing, datetime

/template/python3/chat/message_processor.py

Message processing functionality
Function process_file: processes message files
Handles metadata extraction and message formatting
Dependencies: os, re, datetime

===

template/js/chat.js:

Core chat functionality implementation with WebSocket connection handling
ChatClient class manages WebSocket connection, message handling, and reconnection logic
Form handling for message posting with fetch API and error handling
Search functionality with debounced input handling and message filtering
Message reply system and form control initialization
Key functions: ChatClient (constructor, connect, handleNewMessage), postMessage, initializeFormControls, replyToMessage
Event listeners for form submission, search, and DOM content loaded
Dependencies: WebSocket API, Fetch API, DOM manipulation
Used by chat.html template for real-time messaging functionality
Handles message posting, searching, replying, and WebSocket communication
Includes error handling and loading states for form submissions
Manages local storage for user preferences and author names
Implements debouncing for search optimization
Provides real-time updates through WebSocket connection

===

template/html/chat_message.html:

Template for individual chat message display
Contains message header with author name
Message content section with support for full/expanded content
Hashtags display section
Reply button with onclick handler
Dependencies: Uses styles from messages.css, Requires chat.js for reply functionality

template/html/chat_message_form.html:

Form template for posting new messages
Contains textarea for message content
Optional fields for author name and tags
Hidden fields for channel and reply_to
Submit button with preventDefault handler
Dependencies: Uses styles from forms.css, Requires chat.js for form submission

template/html/chat_page.html:

Main chat interface template
Header with title and message count
Channel navigation and search section
Messages container
Message form at bottom
Dependencies: Loads base.css, header.css, forms.css, messages.css, responsive.css, chat.js

template/html/index.html:

Landing page template
Navigation menu with links to Chat and Logs
Responsive design with mobile support
Dark mode support via media queries
Self-contained styles in <style> tag
Dependencies: No external dependencies, contains embedded CSS

These files form a chat interface where:

index.html serves as the entry point
chat_page.html provides the main chat interface
chat_message.html handles individual message display
chat_message_form.html handles message input
Key relationships: chat_page.html includes both chat_message.html and chat_message_form.html templates

===

template/css/base.css:
Classes: .chat-container
Tags: body
Core layout styles for the chat application
Defines basic typography, colors, and container structure
Dependencies: Used by all HTML templates as base styling
template/css/forms.css:
Classes: .message-form, .main-input, .send-button, .optional-fields, .form-controls, .form-toggle
Tags: textarea, input, button
Styles for message input form and controls
Includes dark mode support
Dependencies: Used by message form components
template/css/header.css:
Classes: .chat-header, .channel-section, .channel-nav, .channel-link, .search-section
Tags: h1, p, #message-search
Styles for header area including channels and search
Includes responsive design and dark mode
Dependencies: Used by header components and channel navigation
template/css/messages.css:
Classes: .chat-messages, .message, .message-header, .author, .timestamp, .message-content, .hashtags
Tags: None specific
Styles for message display and formatting
Includes hover effects and reply functionality
Dependencies: Used by message display components
template/css/responsive.css:
Classes: .message-highlight, .reply-button, .reply-to
Tags: None specific
Mobile-responsive styles and dark mode overrides
Media queries for different screen sizes
Dependencies: Provides responsive overrides for all components