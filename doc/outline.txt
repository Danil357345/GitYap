template/python3/chat.html.py:

Main chat page generator with message handling and HTML templating
Functions: read_file, extract_metadata, truncate_message, get_available_channels, process_file, generate_chat_html
Handles channel management, message formatting, and HTML generation
Dependencies: os, re, datetime, chardet, argparse, multiprocessing
Used by http_handler.py for serving chat pages

template/python3/commit_files.py:

Git repository management and file commit handling
Functions: calculate_file_hash, extract_metadata, store_metadata, run_git_command, commit_text_files
Manages git operations, metadata extraction, and file commits
Dependencies: os, re, subprocess, datetime, json, hashlib
Used for version control of message files

template/python3/compile_prompt.py:

Compiles documentation and prompts from codebase
Functions: get_file_stats, format_size, read_file, has_marker_comments, format_file_content
Generates formatted documentation from source files
Dependencies: os, sys, re
Used for generating documentation and AI prompts

template/python3/config.py:

Configuration constants and settings
Defines: SCRIPT_TYPES, INTERPRETERS, MIME_TYPES, DEFAULT_CHANNELS
Central configuration for file types, interpreters, and channels
No external dependencies
Used throughout the codebase for configuration

template/python3/file_operations.py:

File system operations and management
Functions: setup_static_files, initialize_channel, setup_default_channels
Handles file copying, channel initialization, and directory setup
Dependencies: os, shutil, Path from pathlib
Used by server.py and http_handler.py

template/python3/file_utils.py:

Utility functions for file operations
Class: FileUtils with read_file_safe and write_file_safe methods
Safe file reading/writing with encoding detection
Dependencies: os, chardet
Used throughout codebase for file operations

template/python3/http_handler.py:

HTTP request handler implementation
Class: CustomHTTPRequestHandler
Handles HTTP requests, serves files, manages chat operations
Dependencies: os, re, json, urllib, datetime
Core server component used by server.py

template/python3/log.html.py:

Log page generator for message history
Functions: read_file, extract_metadata, generate_html
Generates HTML report of message history with git info
Dependencies: os, re, datetime, git, gnupg, chardet
Used for generating message logs

template/python3/make_outliner_prompt.py:

Documentation outline generator
Functions: group_files_by_type, get_file_stats, format_file_content
Creates structured documentation outlines
Dependencies: os, sys, re
Used for documentation generation

template/python3/server.py:

Main server implementation with WebSocket support
Class: ChatServer with HTTP and WebSocket servers
Handles server initialization and client connections
Dependencies: socketserver, asyncio, websockets
Main entry point for the chat application

template/python3/start_server.py:

Server startup script
Functions: main
Handles command line arguments and server startup
Dependencies: argparse, os
Entry point for starting the server

template/python3/utils.py:

Utility functions and caching
Classes: Cache
Functions: is_port_in_use, find_available_port, generate_title
Dependencies: socket, random, datetime, functools
Used throughout codebase for common operations

===

template/js/chat.js:

Core chat functionality implementation with WebSocket connection handling
ChatClient class manages WebSocket connection, message handling, and reconnection logic
Form handling for message posting with fetch API and error handling
Search functionality with debounced input handling and message filtering
Message reply system and form control initialization
Key functions: ChatClient (constructor, connect, handleNewMessage), postMessage, initializeFormControls, replyToMessage
Event listeners for form submission, search, and DOM content loaded
Dependencies: WebSocket API, Fetch API, DOM manipulation
Used by chat.html template for real-time messaging functionality
Handles message posting, searching, replying, and WebSocket communication
Includes error handling and loading states for form submissions
Manages local storage for user preferences and author names
Implements debouncing for search optimization
Provides real-time updates through WebSocket connection

===

template/html/chat_message.html:

Template for individual chat message display
Contains message header with author name
Message content section with support for full/expanded content
Hashtags display section
Reply button with onclick handler
Dependencies: Uses styles from messages.css, Requires chat.js for reply functionality

template/html/chat_message_form.html:

Form template for posting new messages
Contains textarea for message content
Optional fields for author name and tags
Hidden fields for channel and reply_to
Submit button with preventDefault handler
Dependencies: Uses styles from forms.css, Requires chat.js for form submission

template/html/chat_page.html:

Main chat interface template
Header with title and message count
Channel navigation and search section
Messages container
Message form at bottom
Dependencies: Loads base.css, header.css, forms.css, messages.css, responsive.css, chat.js

template/html/index.html:

Landing page template
Navigation menu with links to Chat and Logs
Responsive design with mobile support
Dark mode support via media queries
Self-contained styles in <style> tag
Dependencies: No external dependencies, contains embedded CSS

These files form a chat interface where:

index.html serves as the entry point
chat_page.html provides the main chat interface
chat_message.html handles individual message display
chat_message_form.html handles message input
Key relationships: chat_page.html includes both chat_message.html and chat_message_form.html templates

===

template/css/base.css:
Classes: .chat-container
Tags: body
Core layout styles for the chat application
Defines basic typography, colors, and container structure
Dependencies: Used by all HTML templates as base styling
template/css/forms.css:
Classes: .message-form, .main-input, .send-button, .optional-fields, .form-controls, .form-toggle
Tags: textarea, input, button
Styles for message input form and controls
Includes dark mode support
Dependencies: Used by message form components
template/css/header.css:
Classes: .chat-header, .channel-section, .channel-nav, .channel-link, .search-section
Tags: h1, p, #message-search
Styles for header area including channels and search
Includes responsive design and dark mode
Dependencies: Used by header components and channel navigation
template/css/messages.css:
Classes: .chat-messages, .message, .message-header, .author, .timestamp, .message-content, .hashtags
Tags: None specific
Styles for message display and formatting
Includes hover effects and reply functionality
Dependencies: Used by message display components
template/css/responsive.css:
Classes: .message-highlight, .reply-button, .reply-to
Tags: None specific
Mobile-responsive styles and dark mode overrides
Media queries for different screen sizes
Dependencies: Provides responsive overrides for all components