template/python3/chat.html.py: 31 lines, 1.3KB
template/python3/commit_files.py: 221 lines, 6.3KB
template/python3/compile_prompt.py: 162 lines, 5.4KB
template/python3/config.py: 18 lines, 524.0B
template/python3/file_operations.py: 83 lines, 3.0KB
template/python3/file_utils.py: 30 lines, 906.0B
template/python3/http_handler.py: 497 lines, 16.9KB
template/python3/log.html.py: 124 lines, 3.9KB
template/python3/make_outliner_prompt.py: 174 lines, 5.7KB
template/python3/server.py: 83 lines, 2.6KB
template/python3/start_server.py: 32 lines, 938.0B
template/python3/utils.py: 63 lines, 1.7KB
template/python3/chat/channel_manager.py: 39 lines, 1.4KB
template/python3/chat/file_reader.py: 38 lines, 1.1KB
template/python3/chat/html_generator.py: 74 lines, 3.1KB
template/python3/chat/message_processor.py: 47 lines, 1.7KB

/template/python3/chat.html.py:

Main script to generate chat HTML pages
Handles command line arguments for channel, output file, message limits
Uses chat.html_generator for HTML generation
Dependencies: argparse, chat.html_generator

/template/python3/commit_files.py:

Git repository management and file commit functionality
Functions: calculate_file_hash, extract_metadata, store_metadata, git operations
Handles file metadata extraction and storage
Dependencies: git, hashlib, json
Used by server.py for message persistence

/template/python3/compile_prompt.py:

Compiles documentation and prompts from source files
File statistics gathering and formatting
Marker comment handling for different file types
Dependencies: os, sys, re
Used for development documentation

/template/python3/config.py:

Configuration constants for file types and interpreters
Maps file extensions to MIME types
Defines script types and their interpreters
Used by http_handler.py and server.py

/template/python3/file_operations.py:

File system operations for static files and channels
Channel initialization and setup
Git repository setup for channels
Dependencies: os, shutil, git
Used by server.py for file management

/template/python3/file_utils.py:

File reading and writing utilities with encoding detection
Safe file operations with error handling
Dependencies: os, chardet
Used throughout the codebase for file operations

/template/python3/http_handler.py:

Custom HTTP request handler for chat server
Handles GET/POST requests, WebSocket connections
Static file serving and chat page generation
Dependencies: http.server, websockets
Core server component

/template/python3/log.html.py:

Generates HTML report of message files
Git repository message tracking
Message metadata extraction
Dependencies: git, gnupg, chardet
Used for message logging and reporting

/template/python3/make_outliner_prompt.py:

Documentation generation tool
Groups files by type and generates statistics
Marker comment handling
Dependencies: os, sys, re
Development documentation tool

/template/python3/server.py:

Main chat server implementation
HTTP and WebSocket server setup
Client connection management
Dependencies: socketserver, websockets
Core application server

/template/python3/start_server.py:

Server startup script
Command line argument handling
Port availability checking
Dependencies: argparse, server.py
Entry point for running the server

/template/python3/utils.py:

Utility functions and caching
Port checking and finding
Message title generation
Dependencies: socket, random
Used throughout the codebase

/template/python3/chat/channel_manager.py:

Channel management functionality
Channel discovery and file organization
Dependencies: os
Used by html_generator.py

/template/python3/chat/file_reader.py:

File reading with encoding detection
Message metadata extraction
Content truncation
Dependencies: chardet, re
Used by html_generator.py

/template/python3/chat/html_generator.py:

Chat HTML page generation
Channel navigation
Message formatting
Dependencies: multiprocessing, datetime
Used by chat.html.py

/template/python3/chat/message_processor.py:

Message processing and metadata extraction
Channel and reply handling
Dependencies: os, re, datetime
Used by html_generator.py

===

template/js/chat.js: 331 lines, 8.9KB

template/js/chat.js:

Core chat functionality implementation with WebSocket connection handling
ChatClient class manages WebSocket connection, message handling, and reconnection logic
Form handling for message posting with fetch API and error handling
Search functionality with debounced input handling and message filtering
Message reply system and form control initialization
Key functions: ChatClient (constructor, connect, handleNewMessage), postMessage, initializeFormControls, replyToMessage
Event listeners for form submission, search, and DOM content loaded
Dependencies: WebSocket API, Fetch API, DOM manipulation
Used by chat.html template for real-time messaging functionality
Handles message posting, searching, replying, and WebSocket communication
Includes error handling and loading states for form submissions
Manages local storage for user preferences and author names
Implements debouncing for search optimization
Provides real-time updates through WebSocket connection

===

template/html/chat_message.html: 18 lines, 599.0B
template/html/chat_message_form.html: 13 lines, 719.0B
template/html/chat_page.html: 41 lines, 1.3KB
template/html/index.html: 104 lines, 2.8KB

template/html/chat_message.html:

Template for individual chat message display
Contains message header with author name
Message content section with support for full/expanded content
Hashtags display section
Reply button with onclick handler
Dependencies: Uses styles from messages.css, Requires chat.js for reply functionality

template/html/chat_message_form.html:

Form template for posting new messages
Contains textarea for message content
Optional fields for author name and tags
Hidden fields for channel and reply_to
Submit button with preventDefault handler
Dependencies: Uses styles from forms.css, Requires chat.js for form submission

template/html/chat_page.html:

Main chat interface template
Header with title and message count
Channel navigation and search section
Messages container
Message form at bottom
Dependencies: Loads base.css, header.css, forms.css, messages.css, responsive.css, chat.js

template/html/index.html:

Landing page template
Navigation menu with links to Chat and Logs
Responsive design with mobile support
Dark mode support via media queries
Self-contained styles in <style> tag
Dependencies: No external dependencies, contains embedded CSS

These files form a chat interface where:

index.html serves as the entry point
chat_page.html provides the main chat interface
chat_message.html handles individual message display
chat_message_form.html handles message input
Key relationships: chat_page.html includes both chat_message.html and chat_message_form.html templates

===

template/css/base.css: 24 lines, 664.0B
template/css/forms.css: 139 lines, 2.2KB
template/css/header.css: 125 lines, 1.9KB
template/css/messages.css: 100 lines, 1.5KB
template/css/responsive.css: 99 lines, 1.4KB

template/css/base.css:
Classes: .chat-container
Tags: body
Core layout styles for the chat application
Defines basic typography, colors, and container structure
Dependencies: Used by all HTML templates as base styling

template/css/forms.css:
Classes: .message-form, .main-input, .send-button, .optional-fields, .form-controls, .form-toggle
Tags: textarea, input, button
Styles for message input form and controls
Includes dark mode support
Dependencies: Used by message form components

template/css/header.css:
Classes: .chat-header, .channel-section, .channel-nav, .channel-link, .search-section
Tags: h1, p, #message-search
Styles for header area including channels and search
Includes responsive design and dark mode
Dependencies: Used by header components and channel navigation

template/css/messages.css:
Classes: .chat-messages, .message, .message-header, .author, .timestamp, .message-content, .hashtags
Tags: None specific
Styles for message display and formatting
Includes hover effects and reply functionality
Dependencies: Used by message display components

template/css/responsive.css:
Classes: .message-highlight, .reply-button, .reply-to
Tags: None specific
Mobile-responsive styles and dark mode overrides
Media queries for different screen sizes
Dependencies: Provides responsive overrides for all components