Priority tasks:

Each channel (message/ subdirectory) should be its own git repository. (done)
- When saving a message, check if the git repo is initialized, then commit. (done)
- If the git repository allows pushing, push the message to the remote repository. (done)
- Figure out the best way to handle multiple repositories and how to manage them.
- Find the best place/event to pull messages from the remote repository.

Other tasks:

Add logging of messages to the git repository and synchronizing with GitHub.
- Suggest ways to implement live updates using GitHub Actions or other methods.

Figure out a testing strategy for the codebase and implement it.
- Suggest ways to implement unit tests, integration tests, and end-to-end tests.

Add real-time updates using WebSocket

Add message statistics and analytics

Write a sweeper/linter script that ensures all files have marker comments
- For Python files, also ensure indentation is correct and consistent

